(Program
  (Module
    (Identifier))
  (Function
    (Empty)
    (Identifier)
<<<<<<< HEAD
    (Match
      (Pattern
        (LessThan
        { (Identifier)
        ->(Identifier) }
        { (Identifier)
        ->(Identifier) })
        (Call
          (Identifier)
          (Empty)))
      (
        (Pattern
          (LessThan
          { (Identifier)
          ->(Identifier) }
          { (Identifier)
          ->(Identifier) })
          (Call
            (Identifier)
            (Empty)))
        (Pattern
          (Equal
          { (Identifier)
          ->(Identifier) }
            (Integer))
          (Call
          { (Identifier)
          ->(Identifier) }
            (Empty)))))))
=======
    (Args)
    (Switch
      (Case
        (Case
          (Other "expression_list"
            (RelationalOperator
            { (Identifier)
            ->(Identifier) }
              (Other "<")
            { (Identifier)
            ->(Identifier) })))
        (FunctionCall
          (Identifier)))
    {+(Case
      {+(Case
        {+(Other "expression_list"
          {+(RelationalOperator
            {+(Identifier)+}
            {+(Other "<")+}
            {+(Identifier)+})+})+})+}
      {+(FunctionCall
        {+(Identifier)+})+})+}
    {+(Case
      {+(Case
        {+(Other "expression_list"
          {+(RelationalOperator
            {+(Identifier)+}
            {+(Other "==")+}
            {+(NumberLiteral)+})+})+})+}
      {+(FunctionCall
        {+(Identifier)+})+})+}
    {-(Case
      {-(Case
        {-(Other "expression_list"
          {-(RelationalOperator
            {-(Identifier)-}
            {-(Other "<")-}
            {-(Identifier)-})-})-})-}
      {-(FunctionCall
        {-(Identifier)-})-})-}
    {-(Case
      {-(Case
        {-(Other "expression_list"
          {-(RelationalOperator
            {-(Identifier)-}
            {-(Other "==")-}
            {-(NumberLiteral)-})-})-})-}
      {-(FunctionCall
        {-(Identifier)-})-})-})))
>>>>>>> master
